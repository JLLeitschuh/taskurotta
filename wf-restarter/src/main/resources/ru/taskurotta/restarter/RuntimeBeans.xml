<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:hz="http://www.hazelcast.com/schema/spring"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.hazelcast.com/schema/spring http://www.hazelcast.com/schema/spring/hazelcast-spring-2.5.xsd">

    <context:annotation-config/>
    <context:property-placeholder/>

    <hz:hazelcast id="hazelcastInstance">
        <hz:config>
            <hz:properties>
                <hz:property name="hazelcast.logging.type">${hz.logging.type}</hz:property>
                <hz:property name="hazelcast.jmx">${hz.jmx}</hz:property>
                <hz:property name="hazelcast.jmx.detailed">${hz.jmx.detailed}</hz:property>
            </hz:properties>
            <hz:network port="${hz.port}" port-auto-increment="true">
                <hz:join>
                    <hz:multicast enabled="${hz.multicast}" />
                    <hz:tcp-ip enabled="${hz.tcp-ip}">
                        <hz:members>${hz.members}</hz:members>
                    </hz:tcp-ip>
                </hz:join>
            </hz:network>
        </hz:config>
    </hz:hazelcast>

    <bean id="runtimeProvider" class="ru.taskurotta.RuntimeProviderManager" factory-method="getRuntimeProvider"/>

    <bean id="originalDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="${db.url}"/>
        <property name="initialSize" value="${db.initialSize}"/>
        <property name="maxActive" value="${db.maxActive}"/>
        <property name="username" value="${db.user}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <bean id="graphDao" class="ru.taskurotta.backend.hz.dependency.HzGraphDao">
        <constructor-arg name="hzInstance" ref="hazelcastInstance"/>
        <constructor-arg name="decisionsMapName" value="${hz.decision.map.name}" />
        <constructor-arg name="graphsMapName" value="${hz.graph.map.name}" />
    </bean>

    <bean id="dependencyBackend" class="ru.taskurotta.backend.dependency.GeneralDependencyBackend">
        <constructor-arg name="graphDao" ref="graphDao"/>
        <constructor-arg name="retryTimes" value="${dependencyBackend.retryTimes}"/>
    </bean>

    <bean id="taskDao" class="ru.taskurotta.backend.hz.storage.HzTaskDao">
        <constructor-arg name="hzInstance" ref="hazelcastInstance"/>

        <property name="id2TaskMapName" value="${hz.task.map.name}" />
        <property name="id2TaskDecisionMapName" value="${hz.decision.map.name}" />
    </bean>

    <bean id="queueBackend" class="ru.taskurotta.backend.hz.queue.HzQueueBackend">
        <constructor-arg name="hazelcastInstance" ref="hazelcastInstance"/>
        <constructor-arg name="pollDelay" value="${queueBackend.pollDaley}"/>
        <constructor-arg name="pollDelayUnit" value="${queueBackend.pollDelayUnit}"/>

        <property name="queueListName" value="${hz.queues.set.name}" />
        <property name="queueNamePrefix" value="${task.queue.prefix}" />
    </bean>

    <bean id="analyzer" class="ru.taskurotta.restarter.workers.AnalyzerImpl">
        <property name="dataSource" ref="originalDataSource"/>
        <property name="processBatchSize" value="${processBatchSize}"/>
    </bean>

    <bean id="restarter" class="ru.taskurotta.restarter.workers.RestarterImpl">
        <property name="queueBackend" ref="queueBackend"/>
        <property name="dependencyBackend" ref="dependencyBackend"/>
        <property name="taskDao" ref="taskDao"/>
    </bean>

    <bean id="coordinator" class="ru.taskurotta.restarter.deciders.CoordinatorImpl">
        <property name="analyzer">
            <bean class="ru.taskurotta.ProxyFactory" factory-method="getWorkerClient">
                <constructor-arg value="ru.taskurotta.restarter.workers.AnalyzerClient"/>
            </bean>
        </property>
        <property name="restarter">
            <bean class="ru.taskurotta.ProxyFactory" factory-method="getWorkerClient">
                <constructor-arg value="ru.taskurotta.restarter.workers.RestarterClient"/>
            </bean>
        </property>
        <property name="asynchronous">
            <bean class="ru.taskurotta.ProxyFactory" factory-method="getAsynchronousClient">
                <constructor-arg value="ru.taskurotta.restarter.deciders.CoordinatorImpl"/>
            </bean>
        </property>
        <property name="taskBatchSize" value="${taskBatchSize}" />
    </bean>

</beans>