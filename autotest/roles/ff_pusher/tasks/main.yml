---
- name: 'Create pusher data directory'
  tags:
  - start
  file: path={{ ff_pusher_path }} state=directory

- name: 'Start pusher container'
  tags:
  - start
  docker:
    name: "{{ inventory_hostname }}"
    hostname: "{{ inventory_hostname }}"
    image: java:openjdk-8u66-jdk
    state: reloaded
    net: bridge
    volumes:
    - "{{ ff_pusher_path }}:/var/log/taskurotta/pusher"
    - "{{ ff_pusher_path_javadumps }}:/tmp/javadumps"
    - "{{ taskurotta_jar }}:/opt/taskurotta/taskurotta.jar"
    - "{{ ff_pusher_config }}:/etc/taskurotta/pusher/config.xml"
    - "{{ ff_pusher_config_logback }}:/etc/taskurotta/pusher/logback.xml"
    command:
      java -Xmx64m -Xms64m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/javadumps
      -Dlogback.configurationFile=/etc/taskurotta/pusher/logback.xml -Dtsk.endpoint=http://tsk_http:80
      -Dtest.ff.fixedPushRate=false -Dtest.ff.minQueuesSize=500 -Dtest.ff.maxQueuesSize=1000
      -Dtest.ff.maxProcessQuantity={{ tsk_ff_pusher_test_ff_maxProcessQuantity }}
      -Dmongo.client-uri="mongodb://tsk_mongodb:27017"
      -cp /opt/taskurotta/taskurotta.jar ru.taskurotta.test.stress.ProcessPusher
      file:/etc/taskurotta/pusher/config.xml
    net: autotest

- name: 'Stop pusher container'
  tags:
  - stop
  docker:
    name: "{{ inventory_hostname }}"
    image: java:openjdk-8u66-jdk
    state: stopped

- name: 'Remove pusher container'
  tags:
  - clean
  docker:
    name: "{{ inventory_hostname }}"
    image: java:openjdk-8u66-jdk
    state: absent

- name: 'Remove pusher files'
  tags:
  - clean
  shell: "sudo rm -rf {{ ff_pusher_path }} removes={{ ff_pusher_path }}"
#  command: mv /path/to/foo /path/to/bar creates=/path/to/bar removes=/path/to/foo