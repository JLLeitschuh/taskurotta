---
#- debug:
#    var={{ taskurotta_jar }}
#  tags:
#  - start

- name: 'Create taskurotta data directory'
  tags:
  - start
  file: path={{ taskurotta_path }} state=directory

- name: 'Generate taskurotta config file'
  tags:
  - start
  template: src=config.yml.j2 dest={{ taskurotta_path }}/config.yml

- name: 'Start taskurotta container'
  tags:
  - start
  docker:
    name: "{{ inventory_hostname }}"
    image: java:openjdk-8u66-jdk
    state: reloaded
    net: bridge
    volumes:
    - "{{ taskurotta_path }}:/var/log/taskurotta"
    - "{{ taskurotta_path_javadumps }}:/tmp/javadumps"
    - "{{ taskurotta_jar }}:/opt/taskurotta/taskurotta.jar"
    - "{{ taskurotta_config }}:/etc/taskurotta/server/config.yml"
    command:
      java -Xmx512m -Xms512m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/javadumps
      -Dhazelcast.health.monitoring.level=OFF -server -jar /opt/taskurotta/taskurotta.jar
      server /etc/taskurotta/server/config.yml

- name: 'Wait cluster synchronization'
  tags:
  - start
  shell: >
    {{ lookup('pipe', 'find $(pwd) -name wait_cluster.sh') }}
    {{ taskurotta_path}}/service.log {{ groups['taskurotta']|length }}
  changed_when: False

- name: 'Stop taskurotta container'
  tags:
  - stop
  docker:
    name: "{{ inventory_hostname }}"
    image: java:openjdk-8u66-jdk
    state: stopped

- name: 'Remove taskurotta container'
  tags:
  - clean
  docker:
    name: "{{ inventory_hostname }}"
    image: java:openjdk-8u66-jdk
    state: absent

- name: 'Remove taskurotta files'
  tags:
  - clean
  shell: "sudo rm -rf {{ taskurotta_path }} removes={{ taskurotta_path }}"