CREATE TABLE TSK_NFN_TRIGGERS (
  ID                NUMBER NOT NULL PRIMARY KEY,
  TYPE              VARCHAR2(200 char) NOT NULL,
  STATE_JSON        CLOB,
  CFG_JSON          CLOB,
  CHANGE_DATE       TIMESTAMP(6) NOT NULL
);

COMMENT ON COLUMN TSK_NFN_TRIGGERS.ID IS 'Row unique identifier';
COMMENT ON COLUMN TSK_NFN_TRIGGERS.TYPE IS 'Trigger type, for the proper handler use';
COMMENT ON COLUMN TSK_NFN_TRIGGERS.STATE_JSON IS 'JSON representation of the state the trigger was previouslt called';
COMMENT ON COLUMN TSK_NFN_TRIGGERS.CFG_JSON IS 'JSON representation of trigger configuration parameters';
COMMENT ON COLUMN TSK_NFN_TRIGGERS.CHANGE_DATE IS 'Row data change date';

CREATE SEQUENCE SEQ_TSK_NFN_TRIGGERS MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;

CREATE OR REPLACE TRIGGER TSK_NFN_TRIGGERS_BI
BEFORE INSERT
ON TSK_NFN_TRIGGERS
FOR EACH ROW
  BEGIN
    IF :NEW.id IS NULL
    THEN
      SELECT
        SEQ_TSK_NFN_TRIGGERS.NEXTVAL
      INTO :NEW.id
      FROM DUAL;
    END IF;
  END;
/

CREATE TABLE TSK_NFN_SUBSCRIPTIONS (
  ID              NUMBER NOT NULL PRIMARY KEY,
  ACTORS_JSON     CLOB NOT NULL,
  EMAILS_JSON      CLOB NOT NULL,
  CHANGE_DATE     TIMESTAMP(6) NOT NULL
);

COMMENT ON COLUMN TSK_NFN_SUBSCRIPTIONS.ID IS 'Row unique identifier';
COMMENT ON COLUMN TSK_NFN_SUBSCRIPTIONS.ACTORS_JSON IS 'JSON representation of actors list';
COMMENT ON COLUMN TSK_NFN_SUBSCRIPTIONS.EMAILS_JSON IS 'JSON representation of emails list';
COMMENT ON COLUMN TSK_NFN_SUBSCRIPTIONS.CHANGE_DATE IS 'Row data change date';

CREATE SEQUENCE SEQ_TSK_NFN_SUBSCRIPTIONS MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;

CREATE OR REPLACE TRIGGER TSK_NFN_SUBSCRIPTIONS_BI
BEFORE INSERT
ON TSK_NFN_SUBSCRIPTIONS
FOR EACH ROW
  BEGIN
    IF :NEW.id IS NULL
    THEN
      SELECT
        SEQ_TSK_NFN_SUBSCRIPTIONS.NEXTVAL
      INTO :NEW.id
      FROM DUAL;
    END IF;
  END;
/

CREATE TABLE TSK_NFN_LINKS (
  ID                NUMBER NOT NULL PRIMARY KEY,
  SUBSCRIPTION_ID   NUMBER NOT NULL,
  TRIGGER_ID        NUMBER NOT NULL
);

COMMENT ON COLUMN TSK_NFN_LINKS.ID IS 'Row unique identifier';
COMMENT ON COLUMN TSK_NFN_LINKS.SUBSCRIPTION_ID IS 'Foreign key for subscription id';
COMMENT ON COLUMN TSK_NFN_LINKS.TRIGGER_ID IS 'Foreign key for trigger id';

CREATE SEQUENCE SEQ_TSK_NFN_LINKS MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;

CREATE OR REPLACE TRIGGER TSK_NFN_LINKS_BI
BEFORE INSERT
ON TSK_NFN_LINKS
FOR EACH ROW
  BEGIN
    IF :NEW.id IS NULL
    THEN
      SELECT
        SEQ_TSK_NFN_LINKS.NEXTVAL
      INTO :NEW.id
      FROM DUAL;
    END IF;
  END;
/