<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Config support -->
    <bean id="hzConfigBackendSupport" class="ru.taskurotta.backend.hz.support.HzConfigBackendSupport"
          init-method="init">
        <property name="hzInstance" ref="hzInstance"/>
        <property name="queuePrefix" value="${hz.task.queue.prefix}"/>
        <property name="actorPreferencesMapName" value="${hz.actor.preferences.map.name}"/>
    </bean>
    <!-- /Config support -->

    <!-- Delay queue support -->
    <bean id="storageFactory" class="ru.taskurotta.backend.hz.queue.delay.BaseStorageFactory">
        <constructor-arg name="hazelcastInstance" ref="hzInstance"/>
        <constructor-arg name="mapStoragePrefix" value="${dq.mapStoragePrefix}"/>
    </bean>

    <bean id="queueFactory" class="ru.taskurotta.backend.hz.queue.delay.BaseQueueFactory">
        <constructor-arg name="hazelcastInstance" ref="hzInstance"/>
        <constructor-arg name="storageFactory" ref="storageFactory"/>
    </bean>
    <!-- /Delay queue support -->

    <!-- Backends -->
    <bean id="realQueueBackend" class="ru.taskurotta.backend.hz.queue.HzQueueBackend">
        <constructor-arg name="queueFactory" ref="queueFactory"/>
        <constructor-arg name="hazelcastInstance" ref="hzInstance"/>
        <constructor-arg name="queueNamePrefix" value="${hz.task.queue.prefix}"/>
    </bean>

    <bean id="queueBackend" class="ru.taskurotta.assemple.ProxyQueueBackend">
        <constructor-arg name="target" ref="realQueueBackend"/>
    </bean>

    <bean id="taskDao" class="ru.taskurotta.backend.hz.storage.HzTaskDao">
        <constructor-arg name="hzInstance" ref="hzInstance"/>
        <constructor-arg name="id2TaskMapName" value="${hz.task.map.name}"/>
        <constructor-arg name="id2TaskDecisionMapName" value="${hz.decision.map.name}"/>
    </bean>

    <bean id="taskBackend" class="ru.taskurotta.backend.storage.GeneralTaskBackend">
        <constructor-arg name="taskDao" ref="taskDao"/>
    </bean>

    <bean id="dependencyBackend" class="ru.taskurotta.backend.hz.dependency.HzDependencyBackend"
          factory-method="createInstance">
        <constructor-arg name="graphDao" ref="graphDao"/>
    </bean>

    <bean id="graphDao" class="ru.taskurotta.backend.hz.dependency.HzGraphDao">
        <constructor-arg name="hzInstance" ref="hzInstance"/>
        <constructor-arg name="graphsMapName" value="${hz.graph.map.name}"/>
        <constructor-arg name="decisionsMapName" value="${hz.graph.decision.map.name}"/>
    </bean>

    <bean id="configBackend" class="ru.taskurotta.backend.hz.config.HzConfigBackend">
        <constructor-arg name="actorPreferencesMapName" value="${hz.actor.preferences.map.name}"/>
        <constructor-arg name="hazelcastInstance" ref="hzInstance"/>
    </bean>

    <bean id="processBackend" class="ru.taskurotta.backend.hz.storage.HzProcessBackend">
        <constructor-arg name="hzInstance" ref="hzInstance"/>
        <property name="processesStorageMapName" value="${hz.process.map.name}"/>
    </bean>

    <bean id="brokenProcessBackend" class="ru.taskurotta.backend.process.MemoryBrokenProcessBackend">
    </bean>

    <bean id="recoveryProcessBackend" class="ru.taskurotta.backend.recovery.GeneralRecoveryProcessBackend">
        <constructor-arg name="dependencyBackend" ref="dependencyBackend"/>
        <constructor-arg name="processBackend" ref="processBackend"/>
        <constructor-arg name="queueBackendStatistics" ref="metricsQueueBackend"/>
        <constructor-arg name="taskBackend" ref="taskBackend"/>
        <constructor-arg name="taskDao" ref="taskDao"/>
        <constructor-arg name="brokenProcessBackend" ref="brokenProcessBackend"/>
        <constructor-arg name="recoveryProcessTimeOut" value="${recovery.process.timeout}"/>
    </bean>

    <bean id="garbageCollectorBackend" class="ru.taskurotta.backend.hz.gc.HzGarbageCollectorBackend">
        <constructor-arg name="configBackend" ref="configBackend"/>
        <constructor-arg name="processBackend" ref="processBackend"/>
        <constructor-arg name="graphDao" ref="graphDao"/>
        <constructor-arg name="taskDao" ref="taskDao"/>
        <constructor-arg name="hazelcastInstance" ref="hzInstance"/>
        <constructor-arg name="garbageCollectorQueueName" value="${gc.queueName}"/>
        <constructor-arg name="poolSize" value="${gc.poolSize}"/>
        <constructor-arg name="keepTime" value="${gc.keepTime}"/>
    </bean>
    <!-- /Backends -->

    <!-- Task server -->
    <bean id="realTaskServer" class="ru.taskurotta.backend.hz.server.HazelcastTaskServer">
        <constructor-arg name="configBackend" ref="configBackend"/>
        <constructor-arg name="dependencyBackend" ref="dependencyBackend"/>
        <constructor-arg name="processBackend" ref="processBackend"/>
        <constructor-arg name="queueBackend" ref="queueBackend"/>
        <constructor-arg name="taskBackend" ref="taskBackend"/>
        <constructor-arg name="brokenProcessBackend" ref="brokenProcessBackend" />
        <constructor-arg name="garbageCollectorBackend" ref="garbageCollectorBackend"/>
        <constructor-arg name="hzInstance" ref="hzInstance"/>
        <constructor-arg name="nodeCustomName" value="${node.custom.name}"/>
        <constructor-arg name="decisionProcessingExecutorService" value="${hz.decisions.service.name}"/>
    </bean>

    <bean id="taskServer" class="ru.taskurotta.assemple.ProxyTaskServer">
        <constructor-arg name="target" ref="realTaskServer"/>
    </bean>

</beans>