<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="cachedQueueServiceConfigurator"
          class="ru.taskurotta.hazelcast.queue.config.util.CachedQueueServiceConfigurator">
        <constructor-arg name="hzInstance" ref="hzInstance"/>
        <constructor-arg name="maxPercentageOfHeapSize" value="${hz.queue.memory.max-size}"/>
    </bean>

    <!-- Queues persistence support -->

    <bean id="queueConfigSupport" class="ru.taskurotta.hazelcast.HzQueueConfigSupport">
        <constructor-arg name="hzInstance" ref="hzInstance"/>
        <constructor-arg name="cachedQueueStoreFactory" ref="cachedQueueStoreFactory"/>
        <constructor-arg name="cacheSize" value="100"/>
        <constructor-arg name="binary" value="${hz.queue.task.binary}"/>
        <constructor-arg name="batchLoadSize" value="${hz.queue.task.batch-load-size}"/>
        <constructor-arg name="objectClassName" value="ru.taskurotta.service.queue.TaskQueueItem"/>
    </bean>

    <bean id="pendingDecisionsQueueConfigSupport" class="ru.taskurotta.hazelcast.HzQueueConfigSupport">
        <constructor-arg name="hzInstance" ref="hzInstance"/>
        <constructor-arg name="cachedQueueStoreFactory" ref="cachedQueueStoreFactory"/>
        <constructor-arg name="cacheSize" value="100"/>
        <constructor-arg name="binary" value="${hz.executor-service.decisions.queue.binary}"/>
        <constructor-arg name="batchLoadSize" value="${hz.executor-service.decisions.queue.batch-load-size}"/>
        <constructor-arg name="objectClassName" value="ru.taskurotta.service.hz.TaskKey"/>
    </bean>

    <bean id="pendingQueueConfigurator" factory-bean="pendingDecisionsQueueConfigSupport"
          factory-method="createQueueConfig">
        <constructor-arg name="queueName" value="${hz.executor-service.decisions.queue.name}"/>
    </bean>

    <bean id="queueFactoryForQueueBackend" class="ru.taskurotta.hazelcast.queue.delay.DefaultQueueFactory">
        <constructor-arg name="hazelcastInstance" ref="hzInstance"/>
        <constructor-arg name="storageFactory" ref="storageFactoryForQueueBackend"/>
        <constructor-arg name="hzQueueConfigSupport" ref="queueConfigSupport"/>
    </bean>

    <bean id="restoreQueueSupport" class="ru.taskurotta.hazelcast.store.HzQueueRestoreSupport" init-method="init">
        <property name="mongoDB" ref="mongoDB"/>
        <property name="queuePrefix" value="${hz.queue.task.prefix}"/>
        <property name="hzQueueConfigSupport" ref="queueConfigSupport"/>
        <property name="restore" value="${hz.queue.restore}"/>
    </bean>

    <bean id="gcQueueConfigSupport" class="ru.taskurotta.hazelcast.HzQueueConfigSupport">
        <constructor-arg name="hzInstance" ref="hzInstance"/>
        <constructor-arg name="cachedQueueStoreFactory" ref="cachedQueueStoreFactory"/>
        <constructor-arg name="cacheSize" value="100"/>
        <constructor-arg name="binary" value="${gc.queue.binary}"/>
        <constructor-arg name="batchLoadSize" value="${gc.queue.batch-load-size}"/>
        <constructor-arg name="objectClassName" value="java.util.UUID"/>
    </bean>

    <bean id="queueFactoryForGC" class="ru.taskurotta.hazelcast.queue.delay.DefaultQueueFactory">
        <constructor-arg name="hazelcastInstance" ref="hzInstance"/>
        <constructor-arg name="storageFactory" ref="storageFactoryForGC"/>
        <constructor-arg name="hzQueueConfigSupport" ref="gcQueueConfigSupport"/>
    </bean>

    <bean id="recoveryQueueConfigSupport" class="ru.taskurotta.hazelcast.HzQueueConfigSupport">
        <constructor-arg name="hzInstance" ref="hzInstance"/>
        <constructor-arg name="cachedQueueStoreFactory" ref="cachedQueueStoreFactory"/>
        <constructor-arg name="cacheSize" value="100"/>
        <constructor-arg name="binary" value="${recovery.queue.binary}"/>
        <constructor-arg name="batchLoadSize" value="${recovery.queue.batch-load-size}"/>
        <constructor-arg name="objectClassName" value="ru.taskurotta.service.recovery.RecoveryOperation"/>
    </bean>
    <!-- /Queues persistence support -->

    <!-- Delay queue support -->
    <bean id="storageFactoryForQueueBackend" class="ru.taskurotta.hazelcast.queue.delay.MongoStorageFactory">
        <constructor-arg name="hazelcastInstance" ref="hzInstance"/>
        <constructor-arg name="mongoDB" ref="mongoDB"/>
        <constructor-arg name="storagePrefix" value="${dq.storage-prefix}"/>
        <constructor-arg name="scheduleDelayMillis">
            <bean class="ru.taskurotta.util.DurationParser" factory-method="toMillis">
                <constructor-arg name="duration" value="${dq.schedule}"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="batchLoadSize" value="${hz.queue.delay.batch-load-size}"/>
        <constructor-arg name="bSerializationService" ref="bSerializationService"/>
        <constructor-arg name="objectClassName" value="ru.taskurotta.service.queue.TaskQueueItem"/>
    </bean>

    <bean id="storageFactoryForGC" class="ru.taskurotta.hazelcast.queue.delay.MongoStorageFactory">
        <constructor-arg name="hazelcastInstance" ref="hzInstance"/>
        <constructor-arg name="mongoDB" ref="mongoDB"/>
        <constructor-arg name="storagePrefix" value="${gc.dq.storage-prefix}"/>
        <constructor-arg name="scheduleDelayMillis">
            <bean class="ru.taskurotta.util.DurationParser" factory-method="toMillis">
                <constructor-arg name="duration" value="${gc.dq.schedule}"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="batchLoadSize" value="${hz.queue.delay.batch-load-size}"/>
        <constructor-arg name="bSerializationService" ref="bSerializationService"/>
        <constructor-arg name="objectClassName" value="java.util.UUID"/>
    </bean>
    <!-- /Delay queue support -->

    <!-- Services -->
    <bean id="recoveryOperationExecutor" class="ru.taskurotta.service.hz.support.HzOperationExecutor">
        <constructor-arg name="hzInstance" ref="hzInstance"/>
        <constructor-arg name="nativePoint" ref="recoveryService"/>
        <constructor-arg name="hzQueueConfigSupport" ref="recoveryQueueConfigSupport"/>
        <constructor-arg name="queueName" value="${recovery.operation.queue.name}"/>
        <constructor-arg name="poolSize" value="${recovery.operation.pool-size}"/>
        <constructor-arg name="enabled" value="${recovery.enabled}"/>
    </bean>

    <bean id="taskRecoveryOperationExecutor" class="ru.taskurotta.service.hz.support.HzOperationExecutor">
        <constructor-arg name="enabled" value="${recovery.enabled}" />
        <constructor-arg name="hzInstance" ref="hzInstance" />
        <constructor-arg name="hzQueueConfigSupport">
            <bean class="ru.taskurotta.hazelcast.HzQueueConfigSupport">
                <constructor-arg name="hzInstance" ref="hzInstance"/>
                <constructor-arg name="cachedQueueStoreFactory" ref="cachedQueueStoreFactory"/>
                <constructor-arg name="cacheSize" value="100"/>
                <constructor-arg name="binary" value="${recovery.queue.binary}"/>
                <constructor-arg name="batchLoadSize" value="${recovery.queue.batch-load-size}"/>
                <constructor-arg name="objectClassName" value="ru.taskurotta.service.recovery.TaskRecoveryOperation"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="nativePoint" ref="taskRecoveryService" />
        <constructor-arg name="poolSize" value="${recovery.operation.pool-size}" />
        <constructor-arg name="queueName" value="${recovery.operation.queue-name}" />
    </bean>

    <bean id="processService" class="ru.taskurotta.service.hz.storage.MongoProcessService">
        <constructor-arg name="hzInstance" ref="hzInstance"/>
        <constructor-arg name="processesStorageMapName" value="${hz.map.process.name}"/>
        <constructor-arg name="mongoDB" ref="mongoDB"/>
        <constructor-arg name="bSerializationService" ref="bSerializationService"/>
    </bean>

    <!-- /Services -->

    <!-- Services support -->
    <bean id = "hzInterruptedTasksSupport" class="ru.taskurotta.service.hz.support.HzInterruptedTasksRestoreSupport" init-method="init">
        <property name="hzInstance" ref="hzInstance" />
        <property name="mapName" value="${hz.map.interrupted-store.name}" />
        <property name="mongoDb" ref="mongoDB" />
        <property name="restore" value="${hz.map.interrupted-store.restore}" />
        <property name="serializationService" ref="bSerializationService" />
        <property name="interruptedTasksService" ref="interruptedTasksService" />
    </bean>
    <!-- /Services support -->

</beans>