<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:hz="http://www.hazelcast.com/schema/spring"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.hazelcast.com/schema/spring http://www.hazelcast.com/schema/spring/hazelcast-spring-3.1.xsd
            http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <context:property-placeholder/>
    <context:annotation-config/>



    <bean id="processBackend" class="ru.taskurotta.backend.ora.storage.OraProcessBackend">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="brokenProcessBackend" class="ru.taskurotta.backend.ora.storage.OraBrokenProcessBackend">
        <property name="dataSource" ref="originalDataSource"/>
        <property name="lobHandler" ref="lobHandler"/>
    </bean>

    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>


    <!-- Recovery -->
    <bean id="processRecoveryService" class="ru.taskurotta.recovery.ProcessRecoveryService" init-method="init">
        <property name="dataSource" ref="dataSource"/>
        <property name="hazelcastInstance" ref="hzInstance"/>
        <property name="recoveryProcessBackend" ref="recoveryProcessBackend"/>
        <property name="threadCount" value="${recovery.process.thread.count}"/>
        <property name="useDaemonThreads" value="true"/>
        <property name="processBatchSize" value="${recovery.process.batch.size}"/>
        <property name="startupRecovery" value="${recovery.startup.run}"/>
    </bean>

    <bean id="processRecoveryTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="cronExpression" value="${recovery.process.cron}"/>
        <property name="jobDetail">
            <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                <property name="targetObject" ref="processRecoveryService"/>
                <property name="targetMethod" value="findAndSubmitRecovery"/>
                <property name="concurrent" value="false"/>
            </bean>
        </property>
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="processRecoveryTrigger"/>
            </list>
        </property>
    </bean>
    <!-- /Recovery -->



    <!-- Data source -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg name="targetDataSource" ref="originalDataSource"/>
    </bean>

    <bean id="originalDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="${oradb.url}"/>
        <property name="initialSize" value="10"/>
        <property name="maxActive" value="8"/>
        <property name="username" value="${oradb.user}"/>
        <property name="password" value="${oradb.password}"/>
    </bean>
    <!-- /Data source -->


    <!-- Transactions -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="processTransactions" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="startProcess" propagation="REQUIRES_NEW"/>
        </tx:attributes>
    </tx:advice>

    <tx:advice id="brokenProcessTransactions" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="save" propagation="REQUIRES_NEW"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="serviceOperation"
                      expression="execution(* ru.taskurotta.backend.ora.storage.OraProcessBackend.*(..))"/>
        <aop:pointcut id="brokenProcessOperation"
                      expression="execution(* ru.taskurotta.backend.ora.storage.OraBrokenProcessBackend.*(..))"/>

        <aop:advisor advice-ref="processTransactions" pointcut-ref="serviceOperation"/>
        <aop:advisor advice-ref="brokenProcessTransactions" pointcut-ref="brokenProcessOperation"/>
    </aop:config>
    <!-- /Transactions -->

</beans>