<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- Mongo -->
    <bean id="writeConcern" class="com.mongodb.WriteConcern">
        <constructor-arg name="w" value="${mongo.options.write-concern.w}"/>
        <constructor-arg name="wtimeout" value="${mongo.options.write-concern.wtimeout}"/>
        <constructor-arg name="fsync" value="${mongo.options.write-concern.fsync}"/>
        <constructor-arg name="j" value="${mongo.options.write-concern.j}"/>
    </bean>

    <bean id="mongoClientOptionsBuilder" class="ru.taskurotta.mongodb.config.CustomMongoClientOptionsBuilder">
        <constructor-arg name="minConnectionsPerHost" value="${mongo.options.min-connections-per-host}"/>
        <constructor-arg name="connectionsPerHost" value="${mongo.options.connections-per-host}"/>
        <constructor-arg name="threadsAllowedToBlockForConnectionMultiplier" value="${mongo.options.threads-allowed-to-block-for-connection-multiplier}"/>
        <constructor-arg name="maxWaitTime" value="${mongo.options.max-wait-time}"/>
        <constructor-arg name="maxConnectionIdleTime" value="${mongo.options.max-connection-idle-time}"/>
        <constructor-arg name="maxConnectionLifeTime" value="${mongo.options.max-connection-life-time}"/>
        <constructor-arg name="connectTimeout" value="${mongo.options.connect-timeout}"/>
        <constructor-arg name="socketTimeout" value="${mongo.options.socket-timeout}"/>
        <constructor-arg name="socketKeepAlive" value="${mongo.options.socket-keep-alive}"/>
        <constructor-arg name="writeConcern" ref="writeConcern"/>
    </bean>

    <bean id="mongoClientURI" class="com.mongodb.MongoClientURI">
        <constructor-arg name="uri" value="${mongo.client-uri}"/>
        <constructor-arg name="builder" ref="mongoClientOptionsBuilder"/>
    </bean>

    <bean id="mongo" class="com.mongodb.MongoClient">
        <constructor-arg name="uri" ref="mongoClientURI"/>
    </bean>

    <bean id="mongoDB" factory-bean="mongo" factory-method="getDB">
        <constructor-arg name="dbname" value="${mongo.db.name}" />
    </bean>

    <!-- Map stores -->

    <bean id="taskDecisionMapStore" class="ru.taskurotta.hazelcast.store.MongoMapStore">
        <constructor-arg name="mongoDB" ref="mongoDB"/>
        <constructor-arg name="serializationService" ref="bSerializationService"/>
        <constructor-arg name="objectClassName" value="ru.taskurotta.transport.model.Decision"/>
    </bean>

    <bean id="graphMapStore" class="ru.taskurotta.hazelcast.store.MongoMapStore">
        <constructor-arg name="mongoDB" ref="mongoDB"/>
        <constructor-arg name="serializationService" ref="bSerializationService"/>
        <constructor-arg name="objectClassName" value="ru.taskurotta.service.dependency.links.Graph"/>
    </bean>

    <bean id="taskMapStore" class="ru.taskurotta.hazelcast.store.MongoMapStore">
        <constructor-arg name="mongoDB" ref="mongoDB"/>
        <constructor-arg name="serializationService" ref="bSerializationService"/>
        <constructor-arg name="objectClassName" value="ru.taskurotta.transport.model.TaskContainer"/>
    </bean>

    <bean id="processMapStore" class="ru.taskurotta.hazelcast.store.MongoMapStore">
        <constructor-arg name="mongoDB" ref="mongoDB"/>
        <constructor-arg name="serializationService" ref="bSerializationService"/>
        <constructor-arg name="objectClassName" value="ru.taskurotta.service.console.model.Process"/>
    </bean>

    <bean id="actorsPrefMapStore" class="ru.taskurotta.hazelcast.store.MongoMapStore">
        <constructor-arg name="mongoDB" ref="mongoDB"/>
        <constructor-arg name="serializationService" ref="bSerializationService"/>
        <constructor-arg name="objectClassName" value="ru.taskurotta.service.config.model.ActorPreferences"/>
    </bean>

    <bean id="interruptedTasksMapStore" class="ru.taskurotta.hazelcast.store.MongoMapStore">
        <constructor-arg name="mongoDB" ref="mongoDB"/>
        <constructor-arg name="serializationService" ref="bSerializationService"/>
        <constructor-arg name="objectClassName" value="ru.taskurotta.service.console.model.InterruptedTaskExt"/>
    </bean>

    <!-- fastest serializers to BSON -->

    <bean id="taskQueueItemStreamBSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.TaskQueueItemStreamBSerializer"/>

    <bean id="graphBSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.GraphBSerializer"/>

    <bean id="taskContainerBSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.TaskContainerBSerializer"/>

    <bean id="decisionRowBSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.DecisionRowBSerializer"/>

    <bean id="processBSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.ProcessBSerializer"/>

    <bean id="decisionBSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.DecisionBSerializer"/>

    <bean id="uuidSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.UUIDBSerializer"/>

    <bean id="stringSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.StringBSerializer"/>

    <bean id="recoveryOperationSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.RecoveryOperationSerializer"/>

    <bean id="abortProcessOperationSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.AbortProcessOperationSerializer"/>

    <bean id="restartTaskOperationSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.RestartTaskOperationSerializer"/>

    <bean id="taskKeyBSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.TaskKeyBSerializer"/>

    <bean id="actorsPreferencesSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.ActorPreferencesBSerializer"/>

    <bean id="interruptedTasksSerializer"
          class="ru.taskurotta.service.hz.serialization.bson.InterruptedTaskExtBSerializer"/>

    <bean id="bSerializationService" class="ru.taskurotta.mongodb.driver.BSerializationServiceFactory"
          factory-method="newInstance">
        <constructor-arg>
            <list>
                <ref bean="taskQueueItemStreamBSerializer"/>
                <ref bean="graphBSerializer"/>
                <ref bean="taskContainerBSerializer"/>
                <ref bean="decisionRowBSerializer"/>
                <ref bean="processBSerializer"/>
                <ref bean="decisionBSerializer"/>
                <ref bean="uuidSerializer"/>
                <ref bean="stringSerializer"/>
                <ref bean="recoveryOperationSerializer"/>
                <ref bean="restartTaskOperationSerializer" />
                <ref bean="abortProcessOperationSerializer"/>
                <ref bean="taskKeyBSerializer"/>
                <ref bean="actorsPreferencesSerializer"/>
                <ref bean="interruptedTasksSerializer"/>
            </list>
        </constructor-arg>
    </bean>
    <!--- /serializers> -->

    <bean id="cachedQueueStoreFactory"
          class="ru.taskurotta.hazelcast.queue.store.mongodb.MongoCachedQueueStorageFactory">
        <constructor-arg name="mongoDB" ref="mongoDB"/>
        <constructor-arg name="serializationService" ref="bSerializationService"/>
    </bean>
    <!-- /Mongo -->

    <bean id="debugMonitor" class="ru.taskurotta.hazelcast.MongoHealthMonitor">
        <constructor-arg name="mongoDB" ref="mongoDB"/>
        <constructor-arg name="metricsPeriodMs">
            <bean class="ru.taskurotta.util.DurationParser" factory-method="toMillis">
                <constructor-arg name="duration" value="${health.mongo.metrics.log-period}"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="mongoStatPeriodMs">
            <bean class="ru.taskurotta.util.DurationParser" factory-method="toMillis">
                <constructor-arg name="duration" value="${health.mongo.stat.log-period}"/>
            </bean>
        </constructor-arg>
    </bean>


</beans>