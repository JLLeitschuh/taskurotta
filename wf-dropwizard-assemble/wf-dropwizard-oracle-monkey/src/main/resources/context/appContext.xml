<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <context:property-placeholder/>


    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@//taskurotta-db:1521/orcl"/>
        <property name="initialSize" value="20"/>
        <property name="maxActive" value="40"/>
        <property name="username" value="taskurotta"/>
        <property name="password" value="taskurotta"/>
    </bean>

    <bean id="taskPullerResource" class="ru.taskurotta.dropwizard.resources.TaskPullerResource">
        <property name="taskServer" ref="taskServer"/>
    </bean>

    <bean id="taskReleaserResource" class="ru.taskurotta.dropwizard.resources.TaskReleaserResource">
        <property name="taskServer" ref="taskServer"/>
    </bean>

    <bean id="taskStarterResource" class="ru.taskurotta.dropwizard.resources.TaskStarterResource">
        <property name="taskServer" ref="taskServer"/>
    </bean>

    <bean id="taskServer" class="ru.taskurotta.server.GeneralTaskServer">
        <constructor-arg name="configBackend" ref="configBackend"/>
        <constructor-arg name="dependencyBackend" ref="dependencyBackend"/>
        <constructor-arg name="processBackend" ref="processBackend"/>
        <constructor-arg name="queueBackend" ref="queueBackend"/>
        <constructor-arg name="taskBackend" ref="taskBackend"/>
    </bean>

    <!-- Backends -->

    <bean id="queueBackend" class="ru.taskurotta.backend.ora.queue.OraQueueBackend">
        <constructor-arg name="dataSource" ref="dataSource"/>
        <property name="checkpointService" ref="oraCheckpointService"/>
    </bean>

    <bean id="taskDao" class="ru.taskurotta.backend.ora.storage.OraTaskDao">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="oraGraphDao" class="ru.taskurotta.backend.ora.dependency.OraGraphDao">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="oraCheckpointService" class="ru.taskurotta.backend.ora.checkpoint.OracleCheckpointService">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="voidCheckpointService" class="ru.taskurotta.backend.checkpoint.VoidCheckpointService"/>

    <bean id="taskBackend" class="ru.taskurotta.backend.storage.GeneralTaskBackend">
        <constructor-arg name="taskDao" ref="taskDao"/>
        <constructor-arg name="checkpointService" ref="oraCheckpointService"/>
    </bean>

    <bean id="dependencyBackend"
          class="ru.taskurotta.backend.dependency.GeneralDependencyBackend">
        <constructor-arg name="graphDao" ref="oraGraphDao"/>
        <constructor-arg name="retryTimes" value="${retryTimes}"/>
    </bean>

    <bean id="processBackend" class="ru.taskurotta.backend.ora.storage.OraProcessBackend">
        <constructor-arg name="checkpointService" ref="oraCheckpointService"/>
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="configBackend" class="ru.taskurotta.dropwizard.internal.YamlConfigBackend"/>

    <!-- /Backends -->

    <!-- This class should be proper implemented -->
    <bean id="checkTaskServer" class="ru.taskurotta.dropwizard.health.CheckTaskServer">
        <constructor-arg name="name" value="check task server"/>
        <property name="taskServer" ref="taskServer"/>
    </bean>

    <!-- Recoveries -->
    <bean id="expiredTaskRecovery" class="ru.taskurotta.server.recovery.RetryEnqueueRecovery">
        <property name="configBackend" ref="configBackend"/>
        <property name="taskBackend" ref="taskBackend"/>
        <property name="queueBackend" ref="queueBackend"/>
        <property name="recoveryPeriod" value="${recovery.period}"/>
        <property name="recoveryPeriodUnit" value="${recovery.period.unit}"/>
        <property name="timeIterationStep" value="${recovery.timeStep}"/>
        <property name="timeIterationStepUnit" value="${recovery.timeStep.unit}"/>
        <property name="supportedTimeouts">
            <array value-type="ru.taskurotta.backend.checkpoint.TimeoutType">
                <value>TASK_START_TO_CLOSE</value>
                <value>TASK_POLL_TO_COMMIT</value>
            </array>
        </property>
        <property name="checkpointServices">
            <list value-type="ru.taskurotta.backend.checkpoint.CheckpointService">
                <ref bean="oraCheckpointService"/>
            </list>
        </property>
    </bean>
    <!-- /Recoveries -->

    <task:scheduler id="taskExpirationRecovery" pool-size="1"/>
    <task:scheduled-tasks scheduler="taskExpirationRecovery">
        <task:scheduled ref="expiredTaskRecovery" method="run" cron="${recovery.schedule}"/>
    </task:scheduled-tasks>

    <!-- Transactions -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="generalTransactions" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="poll" propagation="REQUIRES_NEW"/>
            <tx:method name="release" propagation="REQUIRES_NEW"/>
            <tx:method name="startProcess" propagation="REQUIRES_NEW"/>
        </tx:attributes>
    </tx:advice>
    <tx:advice id="checkpointTransactions" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="addCheckpoint" propagation="REQUIRED"/>
            <tx:method name="addCheckpoints" propagation="REQUIRED"/>
            <tx:method name="removeCheckpoint" propagation="REQUIRED"/>
            <tx:method name="removeCheckpoints" propagation="REQUIRED"/>
            <tx:method name="removeEntityCheckpoints" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="serviceOperation"
                      expression="execution(* ru.taskurotta.server.GeneralTaskServer.*(..))"/>
        <aop:advisor advice-ref="generalTransactions" pointcut-ref="serviceOperation"/>
    </aop:config>
    <aop:config>
        <aop:pointcut id="checkpointOperation"
                      expression="execution(* ru.taskurotta.backend.ora.checkpoint.OracleCheckpointService.*(..))"/>
        <aop:advisor advice-ref="checkpointTransactions" pointcut-ref="checkpointOperation"/>
    </aop:config>

</beans>