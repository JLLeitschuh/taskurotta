<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    
    <context:property-placeholder/>
    <context:annotation-config />
        
	<bean id="taskPullerResource" class="ru.taskurotta.dropwizard.resources.TaskPullerResource">
		<property name="taskServer" ref="taskServer" />
	</bean>

	<bean id="taskReleaserResource" class="ru.taskurotta.dropwizard.resources.TaskReleaserResource">
		<property name="taskServer" ref="taskServer" />
	</bean>
	
	<bean id="taskStarterResource" class="ru.taskurotta.dropwizard.resources.TaskStarterResource">
		<property name="taskServer" ref="taskServer" />
	</bean>
	
	<bean id = "taskServer" class="ru.taskurotta.dropwizard.internal.TaskServerWrapper" >
	   <property name="taskServer" ref="taskServerGeneral" />
       <property name="daemonTasks">
           <map>
               <entry key="TaskExpirationRecovery" value-ref="taskExpirationRecoveryDaemon" />
           </map>
       </property>    
	</bean>
	
	<bean id = "taskServerGeneral" class="ru.taskurotta.server.GeneralTaskServer" >
	   <constructor-arg name="configBackend" ref="configBackend" />
	   <constructor-arg name="dependencyBackend" ref="dependencyBackend" />
	   <constructor-arg name="processBackend" ref="processBackend" />
	   <constructor-arg name="queueBackend" ref="queueBackend" />
	   <constructor-arg name="taskBackend" ref="taskBackend" />
	</bean>
    
    <bean id = "taskExpirationRecoveryDaemon" class="ru.taskurotta.server.recovery.TaskExpirationRecovery">
        
        <property name="queueBackend" ref="queueBackend" />
        <property name="taskBackend" ref="taskBackend" />
        <property name="configBackend" ref="configBackend" />
        
        <property name="schedule" value = "${expirationCheckSchedule}" />        
        <property name="recoveryPeriod" value = "300" />
        <property name="recoveryPeriodUnit" value = "SECONDS" />
        <property name="timeIterationStep" value="200" />
        
    </bean>
    
    <bean id = "queueBackend" class="ru.taskurotta.backend.queue.MemoryQueueBackend" >
        <constructor-arg name="pollDelay" value = "${pollDelay}" />
    </bean>
    <bean id = "taskBackend" class="ru.taskurotta.backend.storage.MemoryTaskBackend" />
    <bean id = "dependencyBackend" class="ru.taskurotta.backend.dependency.MemoryDependencyBackend" />
    <bean id = "processBackend" class="ru.taskurotta.backend.storage.MemoryProcessBackend" />
    <bean id = "configBackend" class="ru.taskurotta.dropwizard.internal.YamlConfigBackend" />
    
	<bean id = "checkTaskServer" class = "ru.taskurotta.dropwizard.health.CheckTaskServer">
		<constructor-arg name="name" value="check task server" />
		<property name="taskServer" ref="taskServer" />
	</bean>
	
</beans>