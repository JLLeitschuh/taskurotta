<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <context:property-placeholder/>

    <bean id="originalDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="${db.url}"/>
        <property name="initialSize" value="20"/>
        <property name="maxActive" value="40"/>
        <property name="username" value="${db.user}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg name="targetDataSource" ref="originalDataSource"/>
    </bean>

    <!-- Transactions -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="generalTransactions" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="poll" propagation="REQUIRES_NEW"/>
            <tx:method name="release" propagation="REQUIRES_NEW"/>
            <tx:method name="startProcess" propagation="REQUIRES_NEW"/>
        </tx:attributes>
    </tx:advice>
    <tx:advice id="checkpointTransactions" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="addCheckpoint" propagation="REQUIRED"/>
            <tx:method name="addCheckpoints" propagation="REQUIRED"/>
            <tx:method name="removeCheckpoint" propagation="REQUIRED"/>
            <tx:method name="removeCheckpoints" propagation="REQUIRED"/>
            <tx:method name="removeEntityCheckpoints" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="serviceOperation"
                      expression="execution(* ru.taskurotta.server.GeneralTaskServer.*(..))"/>
        <aop:advisor advice-ref="generalTransactions" pointcut-ref="serviceOperation"/>
    </aop:config>
    <aop:config>
        <aop:pointcut id="checkpointOperation"
                      expression="execution(* ru.taskurotta.backend.ora.checkpoint.OracleCheckpointService.*(..))"/>
        <aop:advisor advice-ref="checkpointTransactions" pointcut-ref="checkpointOperation"/>
    </aop:config>

    <bean id="taskPullerResource" class="ru.taskurotta.dropwizard.resources.TaskPollerResource">
        <property name="taskServer" ref="taskServer"/>
    </bean>

    <bean id="taskReleaserResource" class="ru.taskurotta.dropwizard.resources.TaskReleaserResource">
        <property name="taskServer" ref="taskServer"/>
    </bean>

    <bean id="taskStarterResource" class="ru.taskurotta.dropwizard.resources.TaskStarterResource">
        <property name="taskServer" ref="taskServer"/>
    </bean>

    <bean id="checkTaskServer" class="ru.taskurotta.dropwizard.health.CheckTaskServer">
        <constructor-arg name="name" value="check task server"/>
        <property name="taskServer" ref="taskServer"/>
    </bean>

    <!--DAO-->
    <bean id="taskDao" class="ru.taskurotta.backend.ora.storage.OraTaskDao">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="oraGraphDao" class="ru.taskurotta.backend.ora.dependency.OraGraphDao">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--DAO-->

    <!-- Backend -->
    <bean id="queueBackend" class="ru.taskurotta.backend.ora.queue.OraQueueBackend">
        <constructor-arg name="dataSource" ref="dataSource"/>
        <constructor-arg name="configBackend" ref="configBackend"/>
        <constructor-arg name="validating" value="${db.validating}"/>
        <constructor-arg name="autocreating" value="${db.autocreating}"/>
    </bean>

    <bean id="taskBackend" class="ru.taskurotta.backend.storage.GeneralTaskBackend">
        <constructor-arg name="taskDao" ref="taskDao"/>
        <constructor-arg name="checkpointService" ref="checkpointService"/>
    </bean>

    <bean id="dependencyBackend" class="ru.taskurotta.backend.dependency.GeneralDependencyBackend">
        <constructor-arg name="graphDao" ref="oraGraphDao"/>
    </bean>

    <bean id="processBackend" class="ru.taskurotta.backend.ora.storage.OraProcessBackend">
        <constructor-arg name="checkpointService" ref="checkpointService"/>
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="configBackend" class="ru.taskurotta.dropwizard.server.YamlConfigBackend"/>

    <bean id="checkpointService" class="ru.taskurotta.backend.ora.checkpoint.OracleCheckpointService">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>
    <!-- Backend -->

    <bean id="oraBundle" class="ru.taskurotta.backend.ora.OraBackendBundle">
        <constructor-arg name="configBackend" ref="configBackend"/>
        <constructor-arg name="dependencyBackend" ref="dependencyBackend"/>
        <constructor-arg name="processBackend" ref="processBackend"/>
        <constructor-arg name="queueBackend" ref="queueBackend"/>
        <constructor-arg name="taskBackend" ref="taskBackend"/>
    </bean>

    <bean id="taskServer" class="ru.taskurotta.server.GeneralTaskServer">
        <constructor-arg name="backendBundle" ref="oraBundle"/>
    </bean>

</beans>