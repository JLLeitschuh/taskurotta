<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder/>
    <context:annotation-config />

    <!-- Jersey client with embedded apache HTTP client for connection pooling -->
    <bean id = "taskServer" class="ru.taskurotta.dropwizard.client.jersey.JerseyHttpTaskServerProxy" >
        <property name="connectTimeout" value="${connectTimeout}" />
        <property name="readTimeout" value = "${readTimeout}" />
        <property name="threadPoolSize" value = "${threadPoolSize}" />
        <property name="endpoint" value = "${endpoint}" />
        <!-- All connections are for the same host, so value matches threadpool size -->
        <property name="maxConnectionsPerHost" value="${threadPoolSize}" />
    </bean>

    <!-- Jersey native ws client. Uses new thread for each connection -->
    <!--<bean id = "taskServer" class="ru.taskurotta.dropwizard.client.jersey.JerseyTaskServerProxy" >-->
    <!--<property name="connectTimeout" value="${connectTimeout}" />-->
    <!--<property name="readTimeout" value = "${readTimeout}" />-->

    <!-- It seems like this property doesn't change anything... -->
    <!--<property name="threadPoolSize" value = "${threadPoolSize}" />-->

    <!--<property name="endpoint" value = "${endpoint}" />-->
    <!--</bean>-->

    <bean id="taskCreator" class="ru.taskurotta.example.calculate.WorkflowStarter" init-method="startWork">
        <property name="clientServiceManager" ref="clientServiceManager"/>
        <property name="count" value="${count}"/>
        <property name="startTasks" value="${startTasks}" />
        <property name="startTasksInBackground" value = "${startTasksInBackground}" />
        <property name="startTaskPeriodSeconds" value="${startTaskPeriodSeconds}" />
    </bean>

    <bean id="clientServiceManager" class="ru.taskurotta.client.internal.CommonClientServiceManager">
        <constructor-arg name="taskServer" ref="taskServer" />
    </bean>


</beans>